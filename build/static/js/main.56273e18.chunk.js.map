{"version":3,"sources":["components/Filter.js","components/Person.js","components/PersonList.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Filter","onChange","Person","person","removePerson","name","number","value","id","onClick","PersonList","personsToShow","map","PersonForm","props","onSubmit","handleNameChange","handleNumberChange","type","baseUrl","axios","get","then","response","data","newPerson","post","personId","delete","put","Notification","message","className","Error","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","successMsg","setSuccessMsg","errorMsg","setErrorMsg","useEffect","console","log","personService","initialPersons","length","toLowerCase","includes","event","target","preventDefault","find","window","confirm","changedPerson","setTimeout","catch","error","updatePerson","returnedPerson","concat","createPerson","personName","previousSibling","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56273e18.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({onChange}) => <>\r\n    filter shown with <input onChange={onChange}/>\r\n</>;\r\nexport default Filter","import React from \"react\"\r\n\r\nconst Person = ({person, removePerson}) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number}\r\n            <button value={person.id} onClick={removePerson}>remove</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Person","import React from \"react\"\r\nimport PersonItem from \"./Person\"\r\n\r\nconst PersonList = ({personsToShow, removePerson}) => <>\r\n    {personsToShow.map(person =>\r\n        <PersonItem\r\n            key={person.id}\r\n            person={person}\r\n            removePerson={removePerson}\r\n        />)}\r\n</>\r\n\r\nexport default PersonList","import React from \"react\";\r\n\r\nconst PersonForm = props => <>\r\n    <form onSubmit={props.onSubmit}>\r\n        <div>\r\n            name: <input onChange={props.handleNameChange}/>\r\n        </div>\r\n        <div>\r\n            number: <input onChange={props.handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n</>;\r\n\r\nexport default PersonForm","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (personId) => {\r\n    const request = axios.delete(`${baseUrl}/${personId}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n// eslint-disable-next-line\r\nexport default {getAll, create, remove, update}","import React, {useEffect, useState} from 'react'\nimport Filter from \"./components/Filter\"\nimport PersonList from \"./components/PersonList\"\nimport PersonForm from \"./components/PersonForm\"\nimport personService from './services/persons'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [successMsg, setSuccessMsg] = useState(null)\n    const [errorMsg, setErrorMsg] = useState(null)\n\n    const fetchPersons = () => {\n        console.log('effect')\n        personService.getAll().then(initialPersons => setPersons(initialPersons))\n    }\n\n    useEffect(fetchPersons, [])\n\n    console.log('render', persons.length, 'persons')\n\n    const personsToShow = filter === ''\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(filter))\n\n    const handleNameChange = event => setNewName(event.target.value)\n    const handleNumberChange = event => setNewNumber(event.target.value)\n    const handleFilterChange = event => setFilter(event.target.value.toLowerCase())\n    const removePerson = (event) => {\n        const personName = event.target.previousSibling.previousSibling.previousSibling.data\n        const personId = parseInt(event.target.value)\n        if (window.confirm(`Remove ${personName} ?`)) {\n            setPersons(persons.filter(person => person.id !== personId))\n            personService.remove(personId)\n        }\n    }\n\n    const findPerson = name => persons.find(person => person.name === name)\n    const createPerson = (name, number) => {\n        const newPerson = {\n            name: name,\n            number: number,\n        }\n        personService\n            .create(newPerson)\n            .then(returnedPerson => {\n                setPersons(persons.concat(returnedPerson))\n            })\n            .then(() => {\n                setSuccessMsg(`${newPerson.name} was added.`)\n                setTimeout(() => {\n                    setSuccessMsg(null)\n                }, 5000)\n            })\n    }\n\n    const updatePerson = (number, person) => {\n        const changedPerson = {...person, number: number}\n        personService\n            .update(person.id, changedPerson)\n            .then(changedPerson => {\n                setPersons(persons.map(person => person.id !== changedPerson.id ? person : changedPerson))\n            })\n            .then(() => {\n                setSuccessMsg(`${changedPerson.name} was updated.`)\n                setTimeout(() => {\n                    setSuccessMsg(null)\n                }, 5000)\n            })\n            .catch(error => {\n                setErrorMsg(\n                    `Information of ${changedPerson.name} has already been removed from the server.`\n                )\n                setTimeout(() => {\n                    setErrorMsg(null)\n                }, 5000)\n            })\n    }\n\n    const addPerson = event => {\n        event.preventDefault()\n        const person = findPerson(newName)\n\n        if (!person) {\n            createPerson(newName, newNumber)\n        } else {\n            if (window.confirm(`${person.name} is already added to the phonebook, replace the old number with a new one?`)) {\n                updatePerson(newNumber, person)\n            }\n        }\n\n        // reset state\n        setNewName('')\n        setNewNumber('')\n\n        // clear input fields\n        event.target[0].value = ''\n        event.target[1].value = ''\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Filter onChange={handleFilterChange}/>\n\n            <h3>Add a new Person:</h3>\n            <PersonForm onSubmit={addPerson} handleNameChange={handleNameChange}\n                        handleNumberChange={handleNumberChange}/>\n            <Notification message={successMsg}/>\n            <Error message={errorMsg}/>\n            <h3>Numbers</h3>\n            <PersonList removePerson={removePerson} personsToShow={personsToShow}/>\n        </div>\n    )\n}\n\nconst Notification = ({message}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"success\">\n            {message}\n        </div>\n    )\n}\nconst Error = ({message}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\"\nimport './index.css'\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}